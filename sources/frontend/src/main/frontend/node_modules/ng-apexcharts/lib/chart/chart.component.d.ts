import { OnChanges, OnInit, OnDestroy, SimpleChanges } from "@angular/core";
import { ApexAnnotations, ApexAxisChartSeries, ApexChart, ApexDataLabels, ApexFill, ApexGrid, ApexLegend, ApexNonAxisChartSeries, ApexMarkers, ApexNoData, ApexPlotOptions, ApexResponsive, ApexStates, ApexStroke, ApexTheme, ApexTitleSubtitle, ApexTooltip, ApexXAxis, ApexYAxis } from "../model/apex-types";
import * as ɵngcc0 from '@angular/core';
export declare class ChartComponent implements OnInit, OnChanges, OnDestroy {
    chart: ApexChart;
    annotations: ApexAnnotations;
    colors: any[];
    dataLabels: ApexDataLabels;
    series: ApexAxisChartSeries | ApexNonAxisChartSeries;
    stroke: ApexStroke;
    labels: string[];
    legend: ApexLegend;
    markers: ApexMarkers;
    noData: ApexNoData;
    fill: ApexFill;
    tooltip: ApexTooltip;
    plotOptions: ApexPlotOptions;
    responsive: ApexResponsive[];
    xaxis: ApexXAxis;
    yaxis: ApexYAxis | ApexYAxis[];
    grid: ApexGrid;
    states: ApexStates;
    title: ApexTitleSubtitle;
    subtitle: ApexTitleSubtitle;
    theme: ApexTheme;
    autoUpdateSeries: boolean;
    private chartElement;
    private chartObj;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private createElement;
    render(): Promise<void>;
    updateOptions(options: any, redrawPaths?: boolean, animate?: boolean, updateSyncedCharts?: boolean): Promise<void>;
    updateSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate?: boolean): void;
    appendSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate?: boolean): void;
    toggleSeries(seriesName: string): any;
    showSeries(seriesName: string): void;
    hideSeries(seriesName: string): void;
    resetSeries(): void;
    zoomX(min: number, max: number): void;
    toggleDataPointSelection(seriesIndex: number, dataPointIndex?: number): void;
    destroy(): void;
    setLocale(localeName?: string): void;
    paper(): void;
    addXaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;
    addYaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;
    addPointAnnotation(options: any, pushToMemory?: boolean, context?: any): void;
    removeAnnotation(id: string, options?: any): void;
    clearAnnotations(options?: any): void;
    dataURI(): Promise<void>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ChartComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ChartComponent, "apx-chart", never, {
    "autoUpdateSeries": "autoUpdateSeries";
    "chart": "chart";
    "annotations": "annotations";
    "colors": "colors";
    "dataLabels": "dataLabels";
    "series": "series";
    "stroke": "stroke";
    "labels": "labels";
    "legend": "legend";
    "markers": "markers";
    "noData": "noData";
    "fill": "fill";
    "tooltip": "tooltip";
    "plotOptions": "plotOptions";
    "responsive": "responsive";
    "xaxis": "xaxis";
    "yaxis": "yaxis";
    "grid": "grid";
    "states": "states";
    "title": "title";
    "subtitle": "subtitle";
    "theme": "theme";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNoYXJ0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdEQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uQ2hhbmdlcywgT25Jbml0LCBPbkRlc3Ryb3ksIFNpbXBsZUNoYW5nZXMgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQXBleEFubm90YXRpb25zLCBBcGV4QXhpc0NoYXJ0U2VyaWVzLCBBcGV4Q2hhcnQsIEFwZXhEYXRhTGFiZWxzLCBBcGV4RmlsbCwgQXBleEdyaWQsIEFwZXhMZWdlbmQsIEFwZXhOb25BeGlzQ2hhcnRTZXJpZXMsIEFwZXhNYXJrZXJzLCBBcGV4Tm9EYXRhLCBBcGV4UGxvdE9wdGlvbnMsIEFwZXhSZXNwb25zaXZlLCBBcGV4U3RhdGVzLCBBcGV4U3Ryb2tlLCBBcGV4VGhlbWUsIEFwZXhUaXRsZVN1YnRpdGxlLCBBcGV4VG9vbHRpcCwgQXBleFhBeGlzLCBBcGV4WUF4aXMgfSBmcm9tIFwiLi4vbW9kZWwvYXBleC10eXBlc1wiO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2hhcnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBjaGFydDogQXBleENoYXJ0O1xuICAgIGFubm90YXRpb25zOiBBcGV4QW5ub3RhdGlvbnM7XG4gICAgY29sb3JzOiBhbnlbXTtcbiAgICBkYXRhTGFiZWxzOiBBcGV4RGF0YUxhYmVscztcbiAgICBzZXJpZXM6IEFwZXhBeGlzQ2hhcnRTZXJpZXMgfCBBcGV4Tm9uQXhpc0NoYXJ0U2VyaWVzO1xuICAgIHN0cm9rZTogQXBleFN0cm9rZTtcbiAgICBsYWJlbHM6IHN0cmluZ1tdO1xuICAgIGxlZ2VuZDogQXBleExlZ2VuZDtcbiAgICBtYXJrZXJzOiBBcGV4TWFya2VycztcbiAgICBub0RhdGE6IEFwZXhOb0RhdGE7XG4gICAgZmlsbDogQXBleEZpbGw7XG4gICAgdG9vbHRpcDogQXBleFRvb2x0aXA7XG4gICAgcGxvdE9wdGlvbnM6IEFwZXhQbG90T3B0aW9ucztcbiAgICByZXNwb25zaXZlOiBBcGV4UmVzcG9uc2l2ZVtdO1xuICAgIHhheGlzOiBBcGV4WEF4aXM7XG4gICAgeWF4aXM6IEFwZXhZQXhpcyB8IEFwZXhZQXhpc1tdO1xuICAgIGdyaWQ6IEFwZXhHcmlkO1xuICAgIHN0YXRlczogQXBleFN0YXRlcztcbiAgICB0aXRsZTogQXBleFRpdGxlU3VidGl0bGU7XG4gICAgc3VidGl0bGU6IEFwZXhUaXRsZVN1YnRpdGxlO1xuICAgIHRoZW1lOiBBcGV4VGhlbWU7XG4gICAgYXV0b1VwZGF0ZVNlcmllczogYm9vbGVhbjtcbiAgICBwcml2YXRlIGNoYXJ0RWxlbWVudDtcbiAgICBwcml2YXRlIGNoYXJ0T2JqO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcml2YXRlIGNyZWF0ZUVsZW1lbnQ7XG4gICAgcmVuZGVyKCk6IFByb21pc2U8dm9pZD47XG4gICAgdXBkYXRlT3B0aW9ucyhvcHRpb25zOiBhbnksIHJlZHJhd1BhdGhzPzogYm9vbGVhbiwgYW5pbWF0ZT86IGJvb2xlYW4sIHVwZGF0ZVN5bmNlZENoYXJ0cz86IGJvb2xlYW4pOiBQcm9taXNlPHZvaWQ+O1xuICAgIHVwZGF0ZVNlcmllcyhuZXdTZXJpZXM6IEFwZXhBeGlzQ2hhcnRTZXJpZXMgfCBBcGV4Tm9uQXhpc0NoYXJ0U2VyaWVzLCBhbmltYXRlPzogYm9vbGVhbik6IHZvaWQ7XG4gICAgYXBwZW5kU2VyaWVzKG5ld1NlcmllczogQXBleEF4aXNDaGFydFNlcmllcyB8IEFwZXhOb25BeGlzQ2hhcnRTZXJpZXMsIGFuaW1hdGU/OiBib29sZWFuKTogdm9pZDtcbiAgICB0b2dnbGVTZXJpZXMoc2VyaWVzTmFtZTogc3RyaW5nKTogYW55O1xuICAgIHNob3dTZXJpZXMoc2VyaWVzTmFtZTogc3RyaW5nKTogdm9pZDtcbiAgICBoaWRlU2VyaWVzKHNlcmllc05hbWU6IHN0cmluZyk6IHZvaWQ7XG4gICAgcmVzZXRTZXJpZXMoKTogdm9pZDtcbiAgICB6b29tWChtaW46IG51bWJlciwgbWF4OiBudW1iZXIpOiB2b2lkO1xuICAgIHRvZ2dsZURhdGFQb2ludFNlbGVjdGlvbihzZXJpZXNJbmRleDogbnVtYmVyLCBkYXRhUG9pbnRJbmRleD86IG51bWJlcik6IHZvaWQ7XG4gICAgZGVzdHJveSgpOiB2b2lkO1xuICAgIHNldExvY2FsZShsb2NhbGVOYW1lPzogc3RyaW5nKTogdm9pZDtcbiAgICBwYXBlcigpOiB2b2lkO1xuICAgIGFkZFhheGlzQW5ub3RhdGlvbihvcHRpb25zOiBhbnksIHB1c2hUb01lbW9yeT86IGJvb2xlYW4sIGNvbnRleHQ/OiBhbnkpOiB2b2lkO1xuICAgIGFkZFlheGlzQW5ub3RhdGlvbihvcHRpb25zOiBhbnksIHB1c2hUb01lbW9yeT86IGJvb2xlYW4sIGNvbnRleHQ/OiBhbnkpOiB2b2lkO1xuICAgIGFkZFBvaW50QW5ub3RhdGlvbihvcHRpb25zOiBhbnksIHB1c2hUb01lbW9yeT86IGJvb2xlYW4sIGNvbnRleHQ/OiBhbnkpOiB2b2lkO1xuICAgIHJlbW92ZUFubm90YXRpb24oaWQ6IHN0cmluZywgb3B0aW9ucz86IGFueSk6IHZvaWQ7XG4gICAgY2xlYXJBbm5vdGF0aW9ucyhvcHRpb25zPzogYW55KTogdm9pZDtcbiAgICBkYXRhVVJJKCk6IFByb21pc2U8dm9pZD47XG59XG4iXX0=